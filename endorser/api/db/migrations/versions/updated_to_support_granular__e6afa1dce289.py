"""updated to support Granular configuration of auto-endorsement

Revision ID: e6afa1dce289
Revises: d925cb39480e
Create Date: 2023-12-27 20:26:32.572959

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "e6afa1dce289"
down_revision = "d925cb39480e"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "allowedcredentialdefinition",
        sa.Column("allowed_cred_def_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("issuer_did", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("author_did", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("schema_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("version", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("tag", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("rev_reg_def", sa.Boolean(), nullable=False),
        sa.Column("rev_reg_entry", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("allowed_cred_def_id"),
    )
    op.create_table(
        "allowedpublicdid",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("registered_did", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("registered_did"),
    )
    op.create_table(
        "allowedschema",
        sa.Column("allowed_schema_id", postgresql.UUID(as_uuid=True), nullable=False),
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(),
            server_default=sa.text("now()"),
            nullable=False,
        ),
        sa.Column("author_did", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("schema_name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("version", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.PrimaryKeyConstraint("allowed_schema_id"),
    )
    op.add_column(
        "endorserequest",
        sa.Column(
            "author_goal_code", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
    )
    op.add_column(
        "endorserequest",
        sa.Column(
            "ledger_txn_request", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("endorserequest", "ledger_txn_request")
    op.drop_column("endorserequest", "author_goal_code")
    op.drop_table("allowedschema")
    op.drop_table("allowedpublicdid")
    op.drop_table("allowedcredentialdefinition")
    # ### end Alembic commands ###
